controllerModule.controller('NowEventSalesBrandCtrl', function ($scope, $stateParams, $ionicPopup, $ionicLoading, $q, $ionicPosition, $timeout, $cordovaDatePicker, $sessionStorage, EventSalesService, PopupService, CUService, UtilService) {

    $scope.base.categoryId = 'sales';
    $scope.base.SetCategory($scope.base.categoryId);

    $scope.base.menuId = 'NRSM006';
    $scope.base.SetMenu($scope.base.menuId);

    $scope.headerText = '';
    $scope.headerDate = '';

    $scope.popup = {};

    $scope.sort = {};
    $scope.sort.column = 'name';
    $scope.sort.isDescending = false;

    $scope.param = {};
    $scope.data = {};
    $scope.cuPopup = {};

    $scope.requireScrollHeight = true;

    $scope.style.showCalendarButton = 'none';
    $scope.style.showIPadCalendarButton = 'none';
    $scope.style.showReloadButton = 'inline';

    $scope.favorite.support = false;

    //calendarStack.push('salesBrand');

    $scope.base.GetDate = function () {
        $scope.OpenDatePick();
    }

    $scope.OpenDatePick = function () {

        var options = {
            date: new Date(),
            mode: 'date', // or 'time'
            minDate: new Date() - 10 * 365 * 24 * 60 * 60 * 1000,
            doneButtonLabel: 'DONE',
            doneButtonColor: '#F2F3F4',
            cancelButtonLabel: 'CANCEL',
            cancelButtonColor: '#000000'
        };

        var isIPad = ionic.Platform.isIPad();

        if (isIPad == true) {
        }
        else {
            $cordovaDatePicker.show(options).then(function (date) {
                var selectedDate;
                if (date == undefined || date == null)
                    selectedDate = new Date();
                else {
                    selectedDate = new Date(date);                    
                    $scope.headerDate = UtilService.FormatDate(selectedDate);

                    $scope.GetNowEventSalesData();
                }
            });
        }
    }

    $scope.datePickerCallbackForIPad = function (val) {

        if (typeof (val) === 'undefined') {
        }
        else {
            //var selectedDate = new Date(val);
            $scope.headerDate = UtilService.FormatDate(val);
            //$scope.base.SetDateLocalCaledar($scope.headerDate);
            SetDefaultCalendarDate($scope.headerDate);

            $scope.GetNowEventSalesData();
        }
    }

    $scope.sorting = function (sortColumn) {
        $scope.sort.isDescending = ($scope.sort.column == sortColumn) ? !$scope.sort.isDescending : false;
        $scope.sort.column = sortColumn;
    }

    $scope.Init = function () {
        $scope.debug.Log('NowEventSalesBrandCtrl.Init();');

        var isIPad = ionic.Platform.isIPad();
        isIPad = true; // [TEST]

        if (isIPad == true) {
            $scope.style.showCalendarButton = 'none';
            $scope.style.showIPadCalendarButton = 'inline';
        }
        else {
            $scope.style.showCalendarButton = 'inline';
            $scope.style.showIPadCalendarButton = 'none';
        }

        $scope.SetLocalWord();

        $scope.InitParam();
        $scope.InitVariable();

        $scope.GetNowEventSalesData();

        if (isIPad == true) {
            $scope.base.SetCalendarCallbackForIPad($scope.datePickerCallbackForIPad);
        }
    }

    $scope.SetLocalWord = function () {
        $scope.word.title = '브랜드지점별 행사매출';
    }

    $scope.InitParam = function () {

        $scope.param.standard = $stateParams.standard;
        $scope.param.brandCode = $stateParams.brandCode;
        $scope.param.brandName = $stateParams.brandName.replace("|", "/");
        $scope.param.date = $stateParams.date;
        $scope.param.column = $stateParams.column;
        $scope.param.isDescending = $stateParams.isDescending;
    }

    $scope.InitVariable = function () {
        $scope.popup.standard = $scope.param.standard; // salesDiv
        $scope.headerDate = $scope.param.date;
        //$scope.base.SetDateLocalCaledar($scope.headerDate);
        $scope.sort.column = $scope.param.column;
        $scope.sort.isDescending = $scope.param.isDescending;

        if ($sessionStorage.nowEventSalesBrandCtrl != null) {
            $scope.popup.standard = $sessionStorage.nowEventSalesBrandCtrl.standard;

            $scope.param.brandCode = $sessionStorage.nowEventSalesBrandCtrl.brandCode;
            $scope.param.brandName = $sessionStorage.nowEventSalesBrandCtrl.brandName
            $scope.headerDate = $sessionStorage.nowEventSalesBrandCtrl.date;

            $scope.sort.column = $sessionStorage.nowEventSalesBrandCtrl.column;
            $scope.sort.isDescending = $sessionStorage.nowEventSalesBrandCtrl.isDescending;
        }

        //$scope.base.SetDateLocalCaledar($scope.headerDate);
        SetDefaultCalendarDate($scope.headerDate);

        $scope.gubun = '6';

        $scope.ResetVariable();
    }

    $scope.ResetVariable = function () {
        $scope.headerText = $scope.param.brandName + " > 지점별";
    }

    $scope.GetNowEventSalesData = function () {

        $ionicLoading.show({ noBackdrop: true });

        EventSalesService.query({
            input: $scope.popup.standard,
            gubun: $scope.gubun,
            date: $scope.headerDate,
            plantCode: '',
            layoutCode: '',
            floor: '',
            categoryUnit: '',
            purchaseGroup: '',
            brandCode: $scope.param.brandCode,
            personNumber: $scope.user.loginId
        }, function (data) {

            $ionicLoading.hide();
            $scope.tblData = data.salesdata;
            // plantName, amount(rate), perSum(count), spaceSum

            $timeout(SetScroll, 500);

            if (data.result == 'E') {
                PopupService.OpenPopupAlert(data.message);
                return;
            }
        }, function (error) {
            $ionicLoading.hide();
            $scope.debug.Log(error);
        });
    }

    $scope.OpenNowEventSalesBrandPopup = function () {

        $scope.popupTemp = angular.copy($scope.popup);

        var url = 'templates/sales/nowEventSalesBrandPopup.html';
        $ionicPopup.show({
            templateUrl: url,
            title: '조건 선택',
            cssClass: 'eventSalesPopupNew',
            scope: $scope,
            buttons: [{
                text: '취소',
                onTap: function (e) {
                    return false;
                }
            }, {
                text: '확인',
                ////type: 'button-positive',
                onTap: function (e) {
                    return true;
                }
            }]
        }).then(function (result) {
            if (result == true) {
                $scope.ResetVariable();
                $scope.GetNowEventSalesData();
            }
            else {
                $scope.popup = angular.copy($scope.popupTemp);
            }
        });
    }

    var SetScroll = function () {

        if ($scope.requireScrollHeight == true) {
            var obj = angular.element('#scrollBrand');
            var position = $ionicPosition.position(obj);
            $scope.newHeightA = position.height - position.top + 20;

            $scope.requireScrollHeight = false;
        }
    }

    $scope.Init();

    $scope.base.Reload = function () {
        $scope.debug.Log('NowEventSalesBrandCtrl.base.Reload()');

        ////$scope.Init();
        $scope.GetNowEventSalesData();
    }

    $scope.$on('$ionicView.beforeLeave', function () {
        console.log('nowEventSalesBrandCtrl.$ionicView.beforeLeave()');

        $sessionStorage.nowEventSalesBrandCtrl = {};
        $sessionStorage.nowEventSalesBrandCtrl.standard = $scope.popup.standard;
        $sessionStorage.nowEventSalesBrandCtrl.brandCode = $scope.param.brandCode;
        $sessionStorage.nowEventSalesBrandCtrl.brandName = $scope.param.brandName;
        $sessionStorage.nowEventSalesBrandCtrl.date = $scope.headerDate;
        $sessionStorage.nowEventSalesBrandCtrl.column = $scope.sort.column;
        $sessionStorage.nowEventSalesBrandCtrl.isDescending = $scope.sort.isDescending;
    })
});
