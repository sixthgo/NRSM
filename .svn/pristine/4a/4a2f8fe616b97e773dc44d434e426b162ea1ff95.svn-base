controllerModule.controller('SalesProjectionsCtrl', function ($scope,
                                                              $stateParams,
                                                              $ionicScrollDelegate,
                                                              $q,
                                                              QueryDailySalePredictionInService,
                                                              $ionicLoading,
                                                              $cordovaDatePicker,
                                                              PopupService,
                                                              $ionicPopup) {

    $scope.base.categoryId = 'common';
    $scope.base.SetCategory($scope.base.categoryId);

    $scope.base.menuId = 'NRSM009';
    $scope.base.SetMenu($scope.base.menuId);

    $scope.data = {};

    $scope.storePopup = {};
    $scope.storePopup.selectedStore = { plantCode: '8206', plantName: '전지점' };
    $scope.storePopup.selectedStoreTemp = null;

    $scope.dmchk = {};
    $scope.dmchk.selectedDmchk = '0';
    
    $scope.Init = function () {

        var defer = $q.defer();

        defer.promise
            .then($scope.base.GetUserMenu)
            .then($scope.base.HasMenu)
            .then($scope.PostProcessing);

        defer.resolve();
    }

    $scope.PostProcessing = function (isAuthenticate) {

        if (isAuthenticate == false) {
            PopupService.OpenPopupAlert('Warning', 'No have permission', $scope.GoHome);
            return;
        }
        // set local word
        $scope.SetLocalWord();
        //
        $scope.InitData();

        $scope.base.swiper();
    }

    $scope.GoHome = function () {
        ////$ionicHistory.clearCache();
        $state.go('app.home');
    }

    $scope.CatchException = function (error) {
        // optional hide loading image
        $ionicLoading.hide();
        $scope.debug.Log('CatchException');
    }

    $scope.InitData = function () {
        $scope.data.plantCode = $scope.storePopup.selectedStore.plantCode;
        $scope.data.day1 = "2015-06-06";
        $scope.data.day2 = "2014-06-04";
        $scope.data.dmchk = $scope.dmchk.selectedDmchk;
        $scope.data.sabun = "10151795";

        $scope.data.clientSideList = [{
            value:'평일'
        },{
            value:'DM'
        }];

        $scope.data.realSelected = "평일";
        $scope.data.selected = "평일";


        //$q.all({
        //    A: $scope.GetPlantCode().catch($scope.CatchException)
        //    //B: $scope.GetGarbageData2().catch($scope.CatchException)
        //})
        //.then(
        //function (results) {
        //    // hide loading image
        //    $ionicLoading.hide();
        //
        //    $scope.debug.Log('InitData()');
        //}
        //, function (error) {
        //    // hide loading image
        //    $ionicLoading.hide();
        //
        //    $scope.debug.Log('$q error');
        //});
    }

    $scope.GetPlantCode = function () {
        //var defer = $q.defer();

        //$scope.data.plantCode = 8206;
        //$scope.data.day1 = "2015-06-06";
        //$scope.data.day2 = "2014-06-04";
        //$scope.data.dmchk = "0";
        //$scope.data.sabun = "10151795";



       // return defer.promise;
    }

    $scope.SetLocalWord = function () {
        $scope.word.title = 'SalesProjectionsCtrl';
    }

    $scope.SearchSaleProjection = function () {

        $ionicLoading.show({
            noBackdrop: true
        });

        QueryDailySalePredictionInService.query({
            day1: $scope.data.day1,
            day2: $scope.data.day2,
            dmchk: $scope.data.dmchk,
            sabun: $scope.data.sabun,
            werks: $scope.data.plantCode
        }, function(data){

            if(data.length > 0) {
                $scope.data.dailySalePreditionFloor = data[0].dailySalePreditionFloor;
                $scope.data.dailySalePreditionTime = data[0].dailySalePreditionTime;
            }

            $ionicLoading.hide();
        }, function(error){
            $ionicLoading.hide();
        });
    }

    $scope.Init();

    $scope.OpenStorePopup = function () {
        var name = ($scope.storePopup.selectedStore == null) ? '' : ' : ' + $scope.storePopup.selectedStore.plantName;

        var url = 'templates/storePopup.html';
        $ionicPopup.show({
            templateUrl: url,
            title: '지점 선택',
            subTitle: '현재 선택한 지점 ' + name,
            cssClass: 'storePopup',
            scope: $scope,
            buttons: [{
                text: 'Cancel',
                onTap: function (e) {
                    return false;
                }
            }, {
                text: 'OK',
                type: 'button-positive',
                onTap: function (e) {
                    return true;
                }
            }]
        }).then(function (result) {
            if (result == true) {
                $scope.storePopup.selectedStore = angular.copy($scope.storePopup.selectedStoreTemp);
            }
            else {
                $scope.storePopup.selectedStoreTemp = angular.copy($scope.storePopup.selectedStore);
            }
            //$timeout(SetSwiper, 1000);
        });
    }

    $scope.OpenSaleType = function () {
        var url = 'templates/shopPopup.html';
        PopupService
            .InitPopup(url, $scope, $scope.CallbackConfirm, $scope.CallbackCancel)
            .then(function (modal) {
                modal.show();
                //$scope.openModal();
            });
    }

    $scope.CallbackConfirm = function () {
        if($scope.data.selected=="DM"){
            $scope.data.dmchk = "1";
            $scope.data.realSelected = "DM";
        }
        else{
            $scope.data.dmchk = "0";
            $scope.data.realSelected = "평일";
        }
    }

    $scope.CallbackCancel = function () {
        $scope.debug.Log('$scope.CallbackCancel()');
    }

    $scope.changeCheckStatu = function () {
        //alert($("input:checked ~ .radio-icon").size());
        $("input:checked ~ .radio-icon").css("visibility", "visible")
        $("input:not(:checked) ~ .radio-icon").css("visibility", "hidden")
    }

    $scope.OpenDatePick = function (type) {
        var options = {
            date: new Date(),
            mode: 'date', // or 'time'
            minDate: new Date() - 10000,
            allowOldDates: true,
            allowFutureDates: false,
            doneButtonLabel: 'DONE',
            doneButtonColor: '#F2F3F4',
            cancelButtonLabel: 'CANCEL',
            cancelButtonColor: '#000000'
        };

        console.log('date OK' + type);

        $cordovaDatePicker.show(options).then(function(date){
            if(type == "1"){
                $scope.data.day1 = date;
            }
            else{
                $scope.data.day2 = date;
            }
            //alert(date);
        });
    }


    $scope.setActive = function (activeWhere) {
        //$scope.data.isActive = activeWhere;

        var header = document.getElementsByTagName('body')[0];
        var handle = $ionicScrollDelegate.$getByHandle('saleScroll');

        if (activeWhere == "leftA") {
            handle.scrollTo(0, 0, true);
        }
        else {
            handle.scrollTo(header.clientWidth, 0, true);
        }

        handle.resize();
    }

    $scope.scrolling = function () {

        var header = document.getElementsByTagName('body')[0];
        var handler = $ionicScrollDelegate.$getByHandle('saleScroll');

        var position = handler.getScrollPosition();

        //console.log('left:' + position.left);
        //console.log('header:' + header.clientWidth/2);

        if(position.left > (header.clientWidth/2)) {
            $scope.data.isActive = 'leftB';
        }
        else {
            $scope.data.isActive = 'leftA';
        }

        handler.freezeScroll(false);
        $scope.$apply();
    }
});