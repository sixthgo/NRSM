//var getBarcodebySwipe = function (barcode) {
//     var scope = angular.element($('#home')).scope();
//    // alert(barcode);
//     scope.$apply(function (barcode) {
//         scope.GetBarCode(barcode);
//     });
//}

cortrollerModule.controller('HomeCtrl', function ($scope, $state, $stateParams, $q, $ionicLoading, MenuApiService, FavoriteService, PopupService) {

    $scope.base.menuId = $scope.setting.homeMenuId;
    $scope.base.SetMenu($scope.base.menuId);

    $scope.menu = {};
    $scope.menu.sections = [];

    $scope.base.categoryId = "home";

    $scope.Init = function () {
        $scope.debug.Log('base.menuId=' + $scope.base.menuId);
        $scope.InitData();
    }

    $scope.GetUserMenu = function () {
        var defer = $q.defer();

        MenuApiService.get({
            appId: $scope.system.appId,
            loginId: $scope.user.loginId,
            currentMenuVersion: $scope.system.currentMenuVersion,
            locale: $scope.system.locale
        }, function (data) {
            $scope.debug.Log('GetUserMenu.get().success');
            angular.copy(data.data.sections, $scope.menu.sections);
            defer.resolve();
        }, function (error) {            
            $scope.debug.Log(error);
            defer.reject(error);
        });

        return defer.promise;
    }

    $scope.GetUserFavorite = function () {
        var defer = $q.defer();

        FavoriteService.query({
            loginId: $scope.user.loginId            
        }, function (data) {
            $scope.debug.Log('GetUserFavorite.query().success');
            angular.copy(data, $scope.favorite.items);
            defer.resolve();
        }, function (error) {
            $scope.debug.Log(error);
            defer.reject(error);
        });

        return defer.promise;
    }

    $scope.CatchException = function (error) {
        $scope.debug.Log( error);
    }

    $scope.InitData = function () {

        $ionicLoading.show();

        $q.all({
                A: $scope.GetUserMenu().catch($scope.CatchException),
                B: $scope.GetUserFavorite().catch($scope.CatchException)
            })
            .then(
                function (results) {
                    $ionicLoading.hide();

                    $scope.debug.Log('InitData()');
                    //
                    $scope.SetFavoriteMenuName();
                }
            );
    }

    $scope.SetFavoriteMenuName = function () {
        var temp = $scope.favorite.items;
        for (var i = 0; i < temp.length; i++) {
            temp[i].name = $scope.GetMenuName(temp[i].url);
        }
    }

    $scope.GoView = function (selectedfavorite) {
        var state = selectedfavorite.url;
        
        if ($scope.HasMenu(state) == true) {
            //$scope.debug.Log('home:$scope.favorite.programCode=' + $scope.favorite.programCode);
            $scope.base.GoView(state, selectedfavorite);
        }
        else {
            // have no authenticate
            PopupService.OpenPopupAlert('Warning', state + 'Have not permission', $scope.CallbackTest);
        }
    }

    $scope.HasMenu = function (state) {

        var hasMenu = false;

        for (var i = 0; i < $scope.menu.sections.length; i++) {
            for (var j = 0; j < $scope.menu.sections[i].menus.length; j++) {
                if ($scope.menu.sections[i].menus[j].url == state) {
                    hasMenu = true;
                    break;
                }
            }
        }

        return hasMenu;
    }

    $scope.GetMenuName = function (state) {

        var name = '';

        for (var i = 0; i < $scope.menu.sections.length; i++) {
            for (var j = 0; j < $scope.menu.sections[i].menus.length; j++) {
                if ($scope.menu.sections[i].menus[j].url == state) {
                    name = $scope.menu.sections[i].menus[j].name;
                    break;
                }
            }
        }

        return name;
    }
    
    // [TEMP]
    $scope.CallbackTest = function () {
        $scope.debug.Log('$scope.CallbackTest()');
    }

    // [TEMP]
    $scope.CallbackConfirm = function () {
        $scope.debug.Log('$scope.CallbackConfirm()');
    }

    // [TEMP]
    $scope.CallbackCancel = function () {
        $scope.debug.Log('$scope.CallbackCancel()');
    }

    // [TEMP]
    $scope.TestModal = function (type) {
        var url = 'templates/common/test.html';
        if (type == 'B')
            url = 'templates/common/testB.html';

        PopupService
                .InitPopup(url, $scope, $scope.CallbackConfirm, $scope.CallbackCancel)
                .then(function (modal) {
                    modal.show();
                });

    }

    // [TEMP]
    $scope.GoViewTEST = function (state, favoriteId) {
        
        //if ($scope.HasMenu(state) == true) {
            //$scope.favorite.id = favoriteId;
            ////$scope.favorite.programCode = 'NRSM003';
            ////$scope.favorite.order = 1;
            $state.go('app.common.floorplanRecordSearch');
        //}
        //else {
            // have no authenticate
            PopupService.OpenPopupAlert('Warning', state + 'Have not permission', $scope.CallbackTest);
            ////PopupService.OpenPopupConfirm('Warning', state + 'Have not permission.', $scope.CallbackConfirm, $scope.CallbackCancel);
            var url = 'templates/common/test.html';
            ////PopupService.OpenPopup(url, $scope);
            //PopupService
            //    .InitPopup(url, $scope)
            //    .then(function (modal) {
            //        modal.show();
            //    });
        //}
    }

    $scope.Init();
});
