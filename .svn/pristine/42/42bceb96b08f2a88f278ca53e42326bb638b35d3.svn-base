controllerModule.controller('ManualOrderCtrl', function ($scope,
                                                         $stateParams,
                                                         PopupService,
                                                         $ionicLoading, $q,
                                                         ManageManualOrderInService,
                                                         $state, UserPurgCodeService) {

    $scope.base.categoryId = 'hyper';
    $scope.base.SetCategory($scope.base.categoryId);

    $scope.base.menuId = 'NRSM014';
    $scope.base.SetMenu($scope.base.menuId);
    $scope.data = {};

    $scope.style.showCalendarButton = 'none'; // default valus is 'none'
    $scope.style.showReloadButton = 'inline'; // default value is ‘inline'


    $scope.Init = function () {

        var defer = $q.defer();

        defer.promise
            .then($scope.base.GetUserMenu)
            .then($scope.base.HasMenu)
            .then($scope.PostProcessing);

        defer.resolve();
    }

    $scope.$watch("base.barCode", function () {
        if ($scope.base.barCode != null && $scope.base.barCode.toString().length > 0) {
            $scope.AutoSearchManualOrderInfo();
        }
    });

    $scope.PostProcessing = function (isAuthenticate) {

        if (isAuthenticate == false) {
            PopupService.OpenPopupAlert('Warning', 'No have permission', $scope.GoHome);
            return;
        }
        // set local word
        $scope.SetLocalWord();
        //
        $scope.InitData();
    }

    $scope.GoHome = function () {
        ////$ionicHistory.clearCache();
        $state.go('app.home');
    }

    $scope.CatchException = function (error) {
        // optional hide loading image
        $ionicLoading.hide();
        $scope.debug.Log('CatchException');
    }

    $scope.InitData = function () {
        //$scope.data.isShow = false;
        //$scope.base.barCode014=null;
        //$scope.data.shopCode=$scope.user.plantCode;

        $scope.user.plantCode = $scope.user.plantCode == "8000" ? "8206" : $scope.user.plantCode;

        $scope.GetUserPurgCode();
    }

    $scope.SetLocalWord = function () {
        $scope.word.title = 'ManualOrderCtrl';
    }

    $scope.GetUserPurgCode = function () {
        UserPurgCodeService.query({
            purgCode: 'ManualOrder',
            x: '',
            y: '',
            z: ''
        }, function (data) {
            $scope.data.PurgCodeList = data;
        }, function (error) {
        });
    }

    $scope.Init();

    $scope.base.Reload = function () {
        $scope.Init();
    }

    $scope.SearchManualOrderInfo = function () {
        var barCode = $scope.base.barCode;

        if(barCode == null || barCode.length == 0) {
            PopupService.OpenPopupAlert("입력값이 올바른지 다시 확인해 주세요.");
            return;
        }
        $ionicLoading.show({
            noBackdrop: true
        });

        ManageManualOrderInService.searchProductInfo({
            matnr: $scope.base.barCode,
            werks: $scope.user.plantCode
        }, function (data){
                $scope.data.ManualOrderInfo = data[0];
            if(data.length>0){
                if($scope.data.ManualOrderInfo.wekgr==null){
                    $scope.data.cellMerge = $scope.data.ManualOrderInfo.openpo;
                }else{
                    $scope.data.cellMerge = $scope.data.ManualOrderInfo.wekgr+"/"+$scope.data.ManualOrderInfo.openpo;
                }
            }else{
                $scope.data.cellMerge = "";
                $scope.data.isShow = false;
            }
            $ionicLoading.hide();
        }, function (error){
            $ionicLoading.hide();
        });
    }

    $scope.SaveManualOrderInfo = function () {
        if ($scope.data.ManualOrderInfo == undefined || $scope.base.barCode == null) {
            PopupService.OpenPopupAlert("데이터가 존재하지 않습니다.");
            return;
        }

        if ($scope.data.ManualOrderInfo.menge == "" || parseInt($scope.data.ManualOrderInfo.menge) == 0) {
            return;
        }

        if ($scope.user.plantCode == undefined || $scope.user.plantCode == ""
        || $scope.user.plantCode == null) {
            PopupService.OpenPopupAlert("존재하지 않는 사번이어서 저장할수 없습니다."); //不存在的工号,无法保存.
            return;
        }
        var temp="";
        for(var i in $scope.data.PurgCodeList) {
           temp=temp+$scope.data.PurgCodeList[i].purgCode;
        }

        if (temp.indexOf($scope.data.ManualOrderInfo.wekgr)<0 ) {
            PopupService.OpenPopupAlert("신선파트에 대해서만 발주 가능합니다.");
            return;
        }

        $ionicLoading.show({
            noBackdrop: true
        });

        var param={
            "BWSCL":$scope.data.ManualOrderInfo.bwscl,
            "BWSCL_TX":$scope.data.ManualOrderInfo.bwscL_TX,
            "LABST":$scope.data.ManualOrderInfo.labst,
            "MATNR":$scope.base.barCode,
            "MATNR1":$scope.data.ManualOrderInfo.matnr1,
            "MEINS":$scope.data.ManualOrderInfo.meins,
            "NOCTL":$scope.data.ManualOrderInfo.noctl,
            "OPENPO":$scope.data.ManualOrderInfo.openpo,
            "PERNO":$scope.data.ManualOrderInfo.perno,
            "PLIFZ":$scope.data.ManualOrderInfo.plipz,
            "TOQTY":$scope.data.ManualOrderInfo.toqty,
            "WEKGR":$scope.data.ManualOrderInfo.wekgr,
            "WERKS":$scope.user.plantCode,
            "MTART":$scope.data.ManualOrderInfo.mtart,
            "UMREZ":$scope.data.ManualOrderInfo.umrez,
            "BEDAT":$scope.data.ManualOrderInfo.bedat,
            "MENGE":$scope.data.ManualOrderInfo.menge,
            "MAKTX":$scope.data.ManualOrderInfo.maktx,
            "YEQTY":$scope.data.ManualOrderInfo.yeqty
        };

        //var param = {"UserName": "liuwenbin", "Password": "123456", "Email": "107186589@qq.com", "Age": 23};
        try {

            ManageManualOrderInService.saveManualOrder(param, function (data){
                $scope.base.barCode = null;
                $scope.data.ManualOrderInfo = null;
                $scope.data.cellMerge = null;
                //$scope.data.ManualOrderInfo.menge = null;
                PopupService.OpenPopupAlert(data.returnMessage);
                $ionicLoading.hide();
            }, function (error){
                console.log(error);
                $ionicLoading.hide();
            })
        }
        catch (error) {
            console.log(error);
        }

    }

    $scope.AutoSearchManualOrderInfo = function () {

        if ($scope.base.canAutoSearch) {
            $scope.SearchManualOrderInfo();
        }

        $scope.base.canAutoSearch = false;
    }

});
