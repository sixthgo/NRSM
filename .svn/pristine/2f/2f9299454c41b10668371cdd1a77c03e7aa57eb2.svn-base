controllerModule.controller('DailyStockCtrl', function ($scope,
                                                        $stateParams,
                                                        $ionicLoading,
                                                        DailyStockService,
                                                        PopupService,
                                                        $q, UtilService, $state) {

    $scope.base.categoryId = 'sc';
    $scope.base.SetCategory($scope.base.categoryId);

    $scope.base.menuId = 'NRSM018';
    $scope.base.SetMenu($scope.base.menuId);

    $scope.data = {};

    $scope.DailyStockList = {};
    $scope.DailyStockList.BarCodeList = [];
    
    $scope.Init = function () {

        var defer = $q.defer();

        defer.promise
            .then($scope.base.GetUserMenu)
            .then($scope.base.HasMenu)
            .then($scope.PostProcessing);

        defer.resolve();
    }

    $scope.PostProcessing = function (isAuthenticate) {
        if ($scope.base.HasAuthentication() == false) {
            // [ing] alert message and move home
            $state.go('app.home');
            return;
        }
        // set local word
        $scope.SetLocalWord();
        //
        $scope.InitData();
    }

    $scope.CatchException = function (error) {
        // optional hide loading image
        $ionicLoading.hide();
        $scope.debug.Log('CatchException');
    }

    $scope.InitData=function(){
        $scope.base.barCode018 = null;
        $scope.data.Time = UtilService.FormatDate(new Date());//new Date().getFullYear() + "-" + new Date().getMonth() + "-" + new Date().getDate();
    }

    $scope.SetLocalWord = function () {
        $scope.word.title = 'DailyStockCtrl';
    }

    $scope.Init();

    $scope.SearchDailyStock = function () {

        var barCode = $scope.base.barCode018;

        if(barCode == null || barCode.length == 0) {
            PopupService.OpenPopupAlert("입력값이 올바른지 다시 확인해 주세요.");
            return;
        }

        $ionicLoading.show({
            noBackdrop: true
        });

        DailyStockService.searchDailyStock({
            WERKS: $scope.user.plantCode,
            MATNR: barCode
        }, function(data){

            if (data.flag == "E") {
                $scope.data.dailyHead.maktx = data.returnMessage;
                $scope.data.dailyHead.price = null;
            }
            else {

                $scope.data.dailyHead = data;

                if ($scope.DailyStockList.BarCodeList != undefined && $scope.DailyStockList.BarCodeList.length > 0) {
                    for (var i in $scope.DailyStockList.BarCodeList) {
                        if ($scope.DailyStockList.BarCodeList[0].BaseLifnr != $scope.data.dailyHead.lifnr) {
                            PopupService.OpenPopupAlert("벤더 코드가 다른 상품입니다.");
                            $scope.data.dailyHead = null;
                        }
                    }
                }
            }
            $ionicLoading.hide();
        }, function(error){
            //
            $ionicLoading.hide();
        })
    }

    $scope.TempSave = function () {

        var total = $scope.data.total == undefined ? 0 : parseInt($scope.data.total);
        var input = $scope.data.dailyHead.input == undefined ? 0 : parseInt($scope.data.dailyHead.input);

        if (input == 0 || $scope.data.dailyHead.price == 0 || $scope.data.dailyHead.price == null ||
            $scope.data.dailyHead.price == undefined) {
            PopupService.OpenPopupAlert("입력값이 올바른지 다시 확인해 주세요.");
            return;
        }

        $scope.data.total = total + input;

        if ($scope.DailyStockList.BarCodeList != undefined && $scope.DailyStockList.BarCodeList.length > 0) {
            for(var i in $scope.DailyStockList.BarCodeList) {
                //当存在相同的条形码时,数量在原来的基础上累加
                if($scope.DailyStockList.BarCodeList[i].Matnr == $scope.base.barCode018) {
                    $scope.DailyStockList.BarCodeList[i].Input =
                        $scope.DailyStockList.BarCodeList[i].Input
                        + input;
                }
                else {
                    var item = { Seq: $scope.DailyStockList.BarCodeList.length + 1, Input: input, Matnr: $scope.base.barCode018};

                    $scope.DailyStockList.BarCodeList.push(item);
                }
            }
        }
        else {
            var item = { Seq: 1, Input: input, Matnr: $scope.base.barCode018, BaseLifnr: $scope.data.dailyHead.lifnr};

            $scope.DailyStockList.BarCodeList.push(item);
        }

        //$scope.data.plantCode = null;
        $scope.base.barCode018 = null;
        $scope.data.dailyHead.maktx = null;
        $scope.data.dailyHead.price = null;
        $scope.data.dailyHead.input = null;

    }

    $scope.GotoSaveDailyStock = function () {

        if ($scope.DailyStockList.BarCodeList == undefined ||
            $scope.DailyStockList.BarCodeList == null || $scope.DailyStockList.BarCodeList.length == 0) {
            return;
        }

        var url = 'templates/sc/dailyStockInfor.html';
        PopupService
            .InitPopup(url, $scope, $scope.CallbackConfirm, $scope.CallbackCancel)
            .then(function (modal) {
                modal.show();
                //$scope.openModal();
            });
    }

    $scope.CallbackConfirm = function () {
        //$scope.data.shop = $scope.data.choose;
    }

    $scope.goBack = function () {
        $scope.closeModal();
    }

    $scope.CallbackCancel = function () {
        $scope.debug.Log('$scope.CallbackCancel()');
    }

    $scope.SaveDailyStock = function () {
        var param = [];

        var item = {}

        for(var i in $scope.DailyStockList.BarCodeList) {
            item = {
                MATNR: $scope.DailyStockList.BarCodeList[i].Matnr,
                INPUT : $scope.DailyStockList.BarCodeList[i].Input,
                INPUTSpecified : true,
                WERKS : $scope.data.werks,
                GRDAT : $scope.data.Time,
                GRDATSpecified : true,
                LIFNR : $scope.data.dailyHead.lifnr,
                MACNT : $scope.data.dailyHead.macnt,
                MACNTSpecified : true,
                MAKTX : $scope.data.dailyHead.maktx,
                MEINS : $scope.data.dailyHead.meins,
                MENGE : $scope.data.dailyHead.mengs,
                MENGESpecified : true,
                MESSG : $scope.data.dailyHead.messg,
                NAME1 : $scope.data.dailyHead.name1,
                PRICE : $scope.data.dailyHead.price,
                PRICESpecified : true,
                RCODE : $scope.data.dailyHead.rcode
            }

            param.push(item);
        }

        if(param.length == 0) {
            return;
        }

        $ionicLoading.show({
            noBackdrop: true
        });

        DailyStockService.saveDailyStock(param, function(data){

            $ionicLoading.hide();

            if(data.flag =="S") {
                PopupService.OpenPopupAlert(data.returnMessage, function () {
                    $scope.closeModal();
                    //$scope.base.Reload();
                    //init page;
                    $scope.data.dailyHead = null;
                    $scope.base.barCode018 = null;
                    $scope.data.total = null;
                    $scope.DailyStockList.BarCodeList = [];
                });
            }

        }, function(error){
            //
            $ionicLoading.hide();
        })
    }

    $scope.RemoveItem = function (index) {

        var spliceItemInput = $scope.DailyStockList.BarCodeList[index].Input;

        $scope.DailyStockList.BarCodeList.splice(index, 1);

        $scope.data.total = $scope.data.total - spliceItemInput;
    }
});