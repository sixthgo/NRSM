controllerModule.controller('CheckCtrl', function($scope, $state, $sessionStorage, $ionicPlatform, $ionicHistory, CordovaService, PopupService, $cordovaSplashscreen, $timeout, $q, $window, $ionicLoading){

    $ionicPlatform.ready(function() {
    // CordovaService.ready.then(function () {
        console.log('   CordovaService   ');
        console.log('isWebView : ' + ionic.Platform.isWebView());

        //device에서 호출한 경우
        if(ionic.Platform.isWebView()){
          cordova.exec(function(winParam){
            var message = winParam.message;
            var codeKey = winParam.codeKey;
            var locale = winParam.locale;

            console.log('message : ' + message);
            console.log('codeKey : ' + codeKey);
            console.log('locale : ' + locale);

            //디바이스 언어를 세션에 저장
            $sessionStorage.deviceLocale = locale;

            //인증 성공ß
            if(codeKey == '0x00000000' || codeKey == '0x50000000'){


              console.log('success MDM certification : ' + message);
              $sessionStorage.loginId = message;

              if(ionic.Platform.isAndroid()) {
                cordova.exec(function(winParam){
                  var version = winParam.version;
                  $sessionStorage.androidVersion = version;
                  console.log('android : ' + $sessionStorage.androidVersion);

                  $ionicHistory.nextViewOptions({
                    disableBack: true
                  });

                  $state.go('app.home');
                }, function(error){
                  console.log('error : ' + error);
                }, 'OSCODE', 'get_version', []);
              }else{

                $ionicHistory.nextViewOptions({
                  disableBack: true
                });

                $state.go('app.home');
              }
              //call cordova app loader
              $scope.checkUpdate();
            }
            //인증 실패
            else{
              $cordovaSplashscreen.hide();
              console.log('Error : ' + message);
              if(codeKey == '0xDB310023'){
                  var appIdentifier = "";
                  if(ionic.Platform.isAndroid()){
                    appIdentifier = 'com.jiransoft.mdm.eland';
                  }
                  else{
                    appIdentifier = 'com.eland.mobilekeeper';
                  }
                  PopupService.OpenPopupConfirm('SmartRetail', message, function() {
                      cordova.exec(function(winParam){

                      }, function (error) {

                      }, 'LaunchApp', 'launch_app', [{ packageName: appIdentifier }]);
                  }, function() {

                  });
              }else{
                PopupService.OpenPopupAlert('Warning', message, $scope.closeApp);
              }

            }
          },function(error){
            // alert(error);
              console.log('error : ' + error);
          }, 'MDM', 'check_app', []);
        }
        //web에서 호출한 경우
        else{
          $sessionStorage.loginId = 'ju_minho';

          $ionicHistory.nextViewOptions({
            disableBack: true
          });

          $state.go('app.home');
        }
    });

    //인증 실패했을 경우, 후속 처리
    $scope.closeApp = function () {
      ionic.Platform.exitApp();
    } 

    $scope.checkUpdate = function () {
        var fs = new CordovaPromiseFS({ persistent: typeof cordova !== 'undefined' });
        var SERVER = 'http://121.190.88.31:8020/Updater/';

        var loader = $window.loader = new CordovaAppLoader({
            fs: fs,
            localRoot: 'SmartRetail',
            serverRoot: SERVER,
            cacheBuster: true,
            checkTimeout: 10000
        });

        loader.check().then(function(updateAvailable) {
            console.log('updateAvailable : ' + updateAvailable);
            if(updateAvailable){
              $ionicLoading.show({
                  template: "앱을 업데이트 중입니다.<br>잠시만 기다려주세요.",
                  noBackdrop: false,
                  delay:500
              });
              // PopupService.OpenPopupConfirm('Update', '앱이 업데이트 되었습니다.<br>업데이트 하시겠습니까?', $scope.startDownlod, null);
              $scope.startDownlod();
            }
        });

        $scope.startDownlod = function () {
            loader.download(onprogress).then(function(manifest){
                console.log('manifest : ' + manifest);
                $scope.updateApp();
            },function(failedDownloadUrlArray){
                console.log('failedDownloadUrlArray : ' + failedDownloadUrlArray);
                $ionicLoading.hide();
            });
        };

        $scope.updateApp = function () {
            console.log('updateApp');
            loader.update();
            // $timeout(function () {
            //   $ionicLoading.hide();
            // }, 3000);
        };
    };

});
