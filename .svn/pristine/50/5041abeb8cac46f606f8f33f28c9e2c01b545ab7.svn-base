controllerModule.controller('RealStockControlCtrl', function ($scope,
                                                              $stateParams,
                                                              ManageRealInventoryInService,
                                                              PopupService,
                                                              $ionicLoading, $q, $state, UserPurgCodeService) {

    $scope.base.categoryId = 'hyper';
    $scope.base.SetCategory($scope.base.categoryId);

    $scope.base.menuId = 'NRSM015';
    $scope.base.SetMenu($scope.base.menuId);

    $scope.data = {};

    $scope.style.showCalendarButton = 'none'; // default valus is 'none'
    $scope.style.showReloadButton = 'inline'; // default value is ‘inline'
    
    $scope.Init = function () {

        //$scope.data.barCode015 = $scope.base.barCode015 == null ? null: $scope.base.barCode015.replace("S","");

        var defer = $q.defer();

        defer.promise
            .then($scope.base.GetUserMenu)
            .then($scope.base.HasMenu)
            .then($scope.GetUserPurgCode)
            .then($scope.PostProcessing);

        defer.resolve();
    }

    $scope.$watch("base.barCode", function () {
        if ($scope.base.barCode != null && $scope.base.barCode.toString().length > 0) {
            $scope.AutoSearchRealStock();
        }
    });

    $scope.PostProcessing = function (isAuthenticate) {

        if (isAuthenticate == false) {
            PopupService.OpenPopupAlert('Warning', 'No have permission', $scope.GoHome);
            return;
        }
        // set local word
        $scope.SetLocalWord();
        //
        $scope.InitData();
    }

    $scope.GetUserPurgCode = function () {
        var defer = $q.defer();

        UserPurgCodeService.query({
            purgCode: 'ManuualOrder',
            x: '',
            y: '',
            z: ''
        }, function (data) {
            $scope.data.PurgCodeList = data;
            defer.resolve(data);
        }, function (error) {
            defer.reject(error);
        });

        return defer.promise;
    }

    $scope.GoHome = function () {
        ////$ionicHistory.clearCache();
        $state.go('app.home');
    }

    $scope.CatchException = function (error) {
        // optional hide loading image
        $ionicLoading.hide();
        $scope.debug.Log('CatchException');
    }

    $scope.InitData = function () {
        $scope.data.uname = "MOBILEUSER";
        //$scope.data.isRealShow = true;
    }

    $scope.SetLocalWord = function () {
        $scope.word.title = 'RealStockControlCtrl';
    }

    $scope.Init();

    $scope.base.Reload = function () {
        $scope.Init();
    }

    $scope.SearchRealStock = function () {
        var barCode = $scope.base.barCode;

        if(barCode == null || barCode.length == 0) {
            PopupService.OpenPopupAlert("입력값이 올바른지 다시 확인해 주세요.");
            return;
        }

        $ionicLoading.show({
            noBackdrop: true
        });

        ManageRealInventoryInService.searchRealStockInfo({
            lbst: $scope.data.nowStock == undefined ? "0" : $scope.data.nowStock,
            matrn: $scope.base.barCode,
            mode: "R",
            rlabst: $scope.data.realStock == undefined ? "0" : parseInt($scope.data.realStock),
            uname: $scope.data.uname,
            werks: $scope.user.plantCode
        }, function (data){
            if (data.flag = "S" && data.msg == null) {
                $scope.data.nowStock = data.labst;
                $scope.base.barCode = data.matnr;
                $scope.data.realStock = parseInt(data.rlabst);
                $scope.data.salePriceInfor = data.maktx;
                //$scope.data.wekgr = data.wekgr;
            }
            else {
                $scope.data.nowStock = null;
                $scope.data.realStock = null;
                $scope.data.salePriceInfor = null;
                PopupService.OpenPopupAlert(data.msg);
            }

            $ionicLoading.hide();
        }, function (error){
            $ionicLoading.hide();
        });
    }

    $scope.AutoSearchRealStock = function () {
        if($scope.base.canAutoSearch){
            $scope.SearchRealStock();
        }

        $scope.base.canAutoSearch = false;
    }

    $scope.UpdateRealStock = function () {

        var barCode = $scope.base.barCode;

        if(barCode == null || barCode.length == 0) {
            PopupService.OpenPopupAlert("입력값이 올바른지 다시 확인해 주세요.");
            return;
        }

        if($scope.data.realStock == null
            || $scope.data.realStock == undefined || $scope.data.realStock == "") {
            return;
        }
        else if (parseInt($scope.data.realStock) < 0 ) {
            return;
        }

        //for(var i in $scope.data.PurgCodeList) {
        //    if ($scope.data.PurgCodeList[i].purgCode == $scope.data.wekgr) {
        //        PopupService.OpenPopupAlert("공산 파트에 대해서만 실재고 조정이 가능합니다.");
        //        return;
        //    }
        //}

        $ionicLoading.show({
            noBackdrop: true
        });

        ManageRealInventoryInService.updateRealStock({
            lbst: $scope.data.nowStock == undefined ? "0" : $scope.data.nowStock,
            matrn: $scope.base.barCode,
            mode: "U",
            rlabst: parseInt($scope.data.realStock),
            uname: $scope.data.uname,
            werks: $scope.user.plantCode
        }, function (data){
            $scope.debug.Log('GetUserFavorite.query().success');

            if(data.flag == "S") {

                if (data.msg != null) {
                    PopupService.OpenPopupAlert(data.msg);
                }
                else {
                    PopupService.OpenPopupAlert("실재고 조정 완료.");
                }
            }
            else {
                PopupService.OpenPopupAlert(data.returnMessage);
            }

            $ionicLoading.hide();
        }, function (error){
            $ionicLoading.hide();
        });
    }
});